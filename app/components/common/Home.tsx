import React, { useEffect } from 'react'
import { NextPage } from 'next'
import Head from 'next/head'
import { useAuth0 } from '@auth0/auth0-react'
import axios from 'axios'
import { useAppSelector } from '../../re-ducks/hooks'
import { selectUserRole } from '../../re-ducks/auth/authSlice'
import Recipes from '../recipe/Recipes'
import { IRecipe } from '../../re-ducks/recipe/type'

type Props = {
  recipes: IRecipe[]
  count: number
}

const Home: NextPage<Props> = (props) => {
  const userRole = useAppSelector(selectUserRole)
  const {
    loginWithRedirect,
    user,
    logout,
    isAuthenticated,
    isLoading,
  } = useAuth0()

  console.log('role', userRole)

  console.log('isAuthenticated', isAuthenticated)

  useEffect(() => {
    ;(async () => {
      if (user) {
        const { name, email, sub, picture } = user
        const userData = { name, email, sub, picture }
        const url =
          process.env.NODE_ENV === 'production'
            ? process.env.NEXT_PUBLIC_AUTH0_API_URL
            : 'http://localhost:8080'

        await axios.post(`${url}/users/register`, userData)
        console.log('ok')
      }
    })()
  }, [user])

  console.log('user', user)

  const guestView = (
    <>
      <h2>ゲストページ</h2>
      <button onClick={() => loginWithRedirect()}>ログイン</button>
    </>
  )

  const userView = (
    <>
      <h2>ユーザーページ</h2>
      <button onClick={() => logout({ returnTo: 'http://localhost:3000' })}>
        ログアウト
      </button>
    </>
  )

  console.log('role')

  const adminView = (
    <>
      <h2>管理者ページ</h2>
      <button onClick={() => logout({ returnTo: 'http://localhost:3000' })}>
        ログアウト
      </button>
    </>
  )

  const Views = () => {
    if (isAuthenticated && userRole === 'user') {
      return userView
    } else if (isAuthenticated && userRole === 'admin') {
      return adminView
    } else {
      return guestView
    }
  }

  return (
    <div>
      <Head>
        <title>Cooking-app</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        {!isLoading && (
          <>
            <Views />
            <Recipes {...props} />
          </>
        )}
      </main>
    </div>
  )
}

export default Home
